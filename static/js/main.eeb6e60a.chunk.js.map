{"version":3,"sources":["Components/CartItem.js","Components/BuyPage.js","Components/Cart.js","App.js","reportWebVitals.js","index.js"],"names":["CartItem","product","addInCart","Card","className","CardImg","top","height","width","src","smallImage","CardBody","CardTitle","productName","CardText","productPrice","Button","color","onClick","BuyPage","useState","setProduct","fetchPhotos","a","Axios","get","headers","Authorization","data","photos","allProduct","map","photo","medium","tinyImage","tiny","random","word","commerce","price","id","datatype","uuid","useEffect","Container","fluid","Row","Col","md","Cart","cartItem","removeItem","buyNow","amount","forEach","item","parseFloat","ListGroup","ListGroupItem","length","CardHeader","CardFooter","App","setCartItem","findIndex","array","toast","type","filter","singleItem","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.eeb6e60a.chunk.js","sourcesContent":["import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardImg,\r\n  CardText,\r\n  CardBody,\r\n  CardTitle,\r\n  Button\r\n} from \"reactstrap\"\r\n\r\n//product and addInCart method\r\nconst  CartItem = ({product, addInCart}) => {\r\n\r\n\r\n  return (\r\n    <Card className=\"mt-2 mb-1\">\r\n    <CardImg top height=\"250\" width=\"100%\" src={product.smallImage} />\r\n    <CardBody className=\"text-center\">\r\n      <CardTitle>{product.productName}</CardTitle>\r\n      <CardText className=\"secondary\">\r\n        price: RS {product.productPrice}\r\n      </CardText>\r\n      <Button color=\"success\" onClick={() => addInCart(product)}>\r\n        Buy Now\r\n      </Button>\r\n    </CardBody>\r\n    </Card> \r\n  )\r\n}\r\n\r\nexport default CartItem","import React, {useState, useEffect} from 'react'\r\n//to fetch api\r\nimport Axios from \"axios\";\r\n//to get fake data\r\nimport {random, commerce, datatype} from \"faker\"\r\n//to do the ui\r\nimport {Container, Col, Row} from \"reactstrap\"\r\nimport CartItem from './CartItem';\r\n\r\n\r\n//this is my key from pexel\r\nconst apiKey = \"563492ad6f917000010000014adcc8c45bfd446d8629a315d4a42db2\";\r\n//url for access\r\nconst url = \"https://api.pexels.com/v1/search?query=toys&per_page=6&page=1\";\r\n//my jsonpage url\r\nconst localurl = \"http://myjson.dit.upm.es/api/bins/1lt3\"\r\n\r\n//here is the component which is loaded with props\r\nconst BuyPage = ({addInCart})=>{\r\n\r\n  const [product, setProduct] = useState([]);\r\n\r\n  // const fetchPhotos = async() =>{\r\n  //   const response = await Axios.get(url,{\r\n  //     headers:{\r\n  //       Authorization: apiKey\r\n  //     }\r\n  //   })\r\n  // }\r\n\r\n  //how to fetch through axios with headers and without headers\r\n  const fetchPhotos = async() =>{\r\n    //const {data} = await Axios.get(localurl,{})\r\n    const {data} = await Axios.get(url,{\r\n\r\n      headers:{\r\n        Authorization: apiKey\r\n      }\r\n\r\n    })\r\n  \r\n  //destructuring data\r\n  const {photos} = data;\r\n\r\n\r\n  const allProduct = photos.map(photo =>({\r\n    smallImage: photo.src.medium,\r\n    tinyImage: photo.src.tiny,\r\n    productName: random.word(),\r\n    productPrice: commerce.price(),\r\n    id: datatype.uuid()\r\n\r\n  }))\r\n  setProduct(allProduct)\r\n\r\n  }\r\n  //load before handed\r\n  useEffect(() => {\r\n   fetchPhotos()\r\n  }, [])\r\n\r\n  return (\r\n    <Container fluid>\r\n      <h1 className=\"text-success text-center\">Buy Page</h1>\r\n      <Row>\r\n      {product.map(product =>(\r\n\r\n        <Col md={4} product={product.id}>\r\n          <CartItem product={product} addInCart={addInCart}/>\r\n        </Col>\r\n      ))}\r\n      </Row>\r\n    \r\n    </Container>\r\n  )\r\n\r\n}\r\n\r\nexport default BuyPage;","import React from 'react'\r\n\r\nimport {\r\n  Container,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  Button,\r\n  CardHeader,\r\n  CardBody,\r\n  Card,\r\n  CardFooter,\r\n  Col,\r\n  Row\r\n} from \"reactstrap\"\r\n\r\nexport default function Cart({cartItem, removeItem, buyNow}) {\r\n\r\n  let amount = 0;\r\n  cartItem.forEach(item =>{\r\n    amount = parseFloat(amount) + parseFloat(item.productPrice)\r\n  })\r\n  return (\r\n    <Container>\r\n      <h1 className=\"text-success\">Your Cart</h1>\r\n      <ListGroup>\r\n      {cartItem.map(item =>(\r\n        <ListGroupItem key={item.id}>\r\n          <Row>\r\n            <Col>\r\n            <img \r\n            height={80}\r\n            src={item.tinyImage} />\r\n            </Col>\r\n            <Col className=\"text-center\">\r\n              <div className=\"text-primary\">\r\n                {item.productName}\r\n              </div>\r\n            <span>price:-{item.productPrice}</span>\r\n            <Button color=\"danger\" onClick={()=>removeItem(item)}>Remove</Button>\r\n            </Col>\r\n          </Row>\r\n        </ListGroupItem>\r\n        \r\n      ))}\r\n      </ListGroup>\r\n      {\r\n        cartItem.length > 0 ? (\r\n\r\n          <Card className=\"text-center\">\r\n            <CardHeader>\r\n              Grand Total\r\n            </CardHeader>\r\n            <CardBody>\r\n              Your amount for {cartItem.length} is {amount}\r\n            </CardBody>\r\n            <CardFooter>\r\n              <Button color=\"success\" onClick={buyNow}>pay here</Button>\r\n            </CardFooter>\r\n          \r\n          </Card>\r\n        ):(\r\n\r\n          <h1 className=\"text-warning\">\r\n          Cart is Empty\r\n          </h1>\r\n          \r\n        )\r\n      }\r\n    </Container>\r\n  )\r\n}\r\n","import React, { useState } from \"react\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport \"react-toastify/dist/ReactToastify.css\";\nimport \"./App.css\";\n\n\nimport {Container, Row, Col} from \"reactstrap\";\nimport {ToastContainer, toast } from \"react-toastify\";\n\nimport BuyPage from \"./Components/BuyPage\";\nimport Cart from \"./Components/Cart\";\n\n\n\nfunction App() {\n  const [cartItem, setCartItem] = useState([]);\n\n  const addInCart = item => {\n    const isAlreadyAdded = cartItem.findIndex(function(array) {\n      return array.id === item.id;\n    });\n\n    if (isAlreadyAdded !== -1) {\n      toast(\"already added in cart\", {\n        type: \"error\"\n      });\n      return\n    }\n\n    setCartItem([...cartItem, item]);\n  };\n\n  const buyNow = () => {\n    setCartItem([]);\n\n    toast(\"Purchase Complete\", {\n      type: \"success\"\n    });\n  };\n\n  const removeItem = item => {\n    setCartItem(cartItem.filter(singleItem => singleItem.id !== item.id));\n  };\n\n  return (\n    <Container fluid>\n      <ToastContainer/>\n        <Row>\n          <Col md=\"8\">\n          <BuyPage addInCart={addInCart} />\n          </Col>\n          <Col md=\"4\">\n            <Cart cartItem = {cartItem} removeItem = {removeItem} buyNow = {buyNow}/>\n          </Col>\n        </Row>\n    </Container>\n     \n  \n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}